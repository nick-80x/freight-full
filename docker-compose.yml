version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: freight_dev
      POSTGRES_USER: freight
      POSTGRES_PASSWORD: freight_dev_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freight -d freight_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      target: development
    environment:
      DATABASE_URL: postgresql://freight:freight_dev_pass@db:5432/freight_dev
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      SECRET_KEY: dev-secret-key-change-in-production
      DEBUG: "true"
      ENVIRONMENT: development
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn freight.api.main:app --host 0.0.0.0 --port 8000 --reload

  worker-default:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      DATABASE_URL: postgresql://freight:freight_dev_pass@db:5432/freight_dev
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      SECRET_KEY: dev-secret-key-change-in-production
      ENVIRONMENT: development
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A freight.worker.main worker --loglevel=info -Q default --concurrency=2

  worker-high-priority:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      DATABASE_URL: postgresql://freight:freight_dev_pass@db:5432/freight_dev
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      SECRET_KEY: dev-secret-key-change-in-production
      ENVIRONMENT: development
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A freight.worker.main worker --loglevel=info -Q high_priority --concurrency=1

  flower:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: celery -A freight.worker.main flower --port=5555

volumes:
  postgres_data:
  redis_data:
